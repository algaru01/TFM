 ---------------
| Crear Usuario |
 ---------------
Si quieres crear un usuario deberás encriptar la contraseña previamente a un formato admitido por 'shadow', por ejemplo:
>> openssl passwd -6 <contraseña>
En este caso -6 significa que usará el algormitmo SHA-512

Finalmente deberás añadirlo mediante un valor de Helm en el archivo values.yaml, de la misma forma que ya está incluido el resto.

 -----
| SSH |
 -----
Para conectarte mediante a SSH a los nodos, si estas usando minikube puedes seguir alguno de los siguientes métodos:

1. Conectandote a la VM de minikube.
Puedes conectarte a la VM de minikube con:
>> minikube ssh

Y desde ahí conectarte directamente a cualquier Pod mediante su IP:
>> ssh <usuario>@<pod_IP>

2. A través de minikube usando el Service NodePort.
Con el Service NodePort activo, la VM de minikube hace de proxy con los Pods. De este modo, puedes obtener la IP de la VM de minikube con:
>> minikube ip

Y posteriormente hacer SSH a dicha IP a través del puerto especificado en nodePort:
>> ssh -p <nodePort> <usuario>@<minikube_ip>

3. Montando el tunel de minikube.
También puedes montar un tunel con:
>> minikube tunnel

Y de este modo podremos hacer SSH al Service creado:
>> ssh <usuario>@<service_ip>

{{- if .Values.benchmark }}
Para hacer el benchmark, entra en el frontend y modifica el /root/hpl/bin/linux/HPL.dot con algo tipo:

HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
4            # of problems sizes (N)
70 80 90 100  Ns
4            # of NBs
1 2 3 4      NBs
0            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
3            Ps
2            Qs
16.0         threshold
3            # of panel fact
0 1 2        PFACTs (0=left, 1=Crout, 2=Right)
2            # of recursive stopping criterium
2 4          NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
3            # of recursive panel fact.
0 1 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
0            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
2            SWAP (0=bin-exch,1=long,2=mix)
64           swapping threshold
0            L1 in (0=transposed,1=no-transposed) form
0            U  in (0=transposed,1=no-transposed) form
1            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)

Puedes aumentar el tamaño del problema con las Ns

Luego ejecuta esto para lanzar el HPL en los 3 nodos con 2 CPUs cada una:
srun --mpi=pmix -N 3 -n 6 /root/hpl/bin/linux/xhpl

Puedes probar a lanzarlo en local con:

mpirun --allow-run-as-root -np 6 ./xhpl


{{- end }}