apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Values.workers.baseHostname }}
spec:
  selector:
    matchLabels:
      type: worker-node
  replicas: {{ .Values.workers.numReplicas }}
  template:
    metadata:
      labels:
        type: worker-node
    spec:
      initContainers:
        {{- if .Values.nfs.useLocal }}
        - name: wait-for-nfs
          image: busybox
          command: ["sh","-c"]
          args:
          - |
            until nc -zv nfs-service 2049;
            do
              echo '-- nfs node (nfs-service) is not available. Sleeping ...';
              sleep 5;
            done
        {{- end }}
        - name: wait-for-frontend
          image: busybox
          command: ["sh","-c"]
          args: 
          - |
            while [ ! -f /home/jupyter/jupyter_shared/ipcontroller-engine.json ]; do
              echo "-- 'ipcontroller-engine.json' file does not exist yet. Sleeping..."
              sleep 5;
            done
          volumeMounts:
            - name: nfs-jupyter
              mountPath: "/home/jupyter/jupyter_shared"
              readOnly: false
      containers:
      - name: worker
        image: agalrui/debian-ipython-wn
        # command: ["ipengine", "--IPEngine.extra_config_file=/home/jupyter/config/ipengine_config.py"]
        # command: ["tail", "-f", "/dev/null"]

        volumeMounts:
        - name: worker-volumen
          mountPath: /home/jupyter/config

        - name: nfs-jupyter
          mountPath: "/home/jupyter/jupyter_shared"
          readOnly: false

        - name: config-users-volume
          mountPath: /etc/passwd
          subPath: passwd
        - name: config-users-volume
          mountPath: /etc/shadow
          subPath: shadow
        - name: config-users-volume
          mountPath: /etc/group
          subPath: group
        - name: config-users-volume
          mountPath: /etc/gshadow
          subPath: gshadow

        {{- range .Values.users }}
        - name: nfs-users-{{ .username }}
          mountPath: /home/{{ .username }}
        {{- end }}

      volumes:
        - name: worker-volumen
          configMap:
            name: {{ .Release.Name }}-ipythonconf
            items:
              - key: ipengine_config.py
                path: ipengine_config.py
            
        - name: nfs-jupyter
          persistentVolumeClaim:
            claimName: pvc-jupyter

        {{- range .Values.users }}
        - name: nfs-users-{{ .username }}
          persistentVolumeClaim:
            claimName: pvc-users-{{ .username }}
        {{- end }}

        - name: config-users-volume
          configMap:
            defaultMode: 0777
            name: {{ .Release.Name }}-users-config
