apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-ipythonconf
data:
  ipcontroller_config.py: |
    # Configuration file for ipcontroller.

    c = get_config()

    c.IPController.log_datefmt = {{ include "myapp.formatValue" .Values.frontend.IPController.logger.log_datefmt}}
    c.IPController.log_format = {{ include "myapp.formatValue" .Values.frontend.IPController.logger.log_format}}
    c.IPController.log_level = {{ include "myapp.formatValue" .Values.frontend.IPController.logger.log_level}}
    c.IPController.log_to_file = {{ include "myapp.formatValue" .Values.frontend.IPController.logger.log_to_file}}
    c.IPController.debug = {{ include "myapp.formatValue" .Values.frontend.IPController.logger.include_all_heartbeats}}
    c.IPController.verbose_crash = {{ include "myapp.formatValue" .Values.frontend.IPController.logger.verbose_crash}}

    c.IPController.registration_timeout = {{ include "myapp.formatValue" .Values.frontend.IPController.heartmonitor.registration_timeout}}
    c.IPController.heartmonitor_period = {{ include "myapp.formatValue" .Values.frontend.IPController.heartmonitor.heartmonitor_period}}
    c.IPController.max_heartmonitor_misses = {{ include "myapp.formatValue" .Values.frontend.IPController.heartmonitor.max_heartmonitor_misses}}

    c.IPController.db_class = {{ include "myapp.formatValue" .Values.frontend.IPController.db.db_class}}


    c.IPController.ip = '*'

    c.IPController.engine_json_file="/home/jupyter/my-nfs/ipcontroller-engine.json"

    c.IPController.location="{{ .Release.Name }}-frontend-service.default.svc.cluster.local"

    c.IPController.client_json_file="/home/jupyter/my-nfs/ipcontroller-client.json"

    c.IPController.ports=[
    {{- range concat .Values.frontend.IPController.enginePorts .Values.frontend.IPController.clientPorts }}
      {{ .port }},
    {{- end }}
    ]
  ipengine_config.py: |
    # Configuration file for ipengine.

    c = get_config()

    c.IPEngine.url_file="/home/jupyter/my-nfs/ipcontroller-engine.json"
