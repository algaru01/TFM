apiVersion: v1
kind: Pod
metadata:
  name: {{ .Release.Name }}-frontend
  labels:
    type: frontend-node
spec:
  securityContext:
    fsGroup: 1000
  initContainers:
    {{- if .Values.nfs.useLocal }}
    - name: wait-for-nfs
      image: busybox
      command: ["sh","-c"]
      args: ["until nc -zv nfs-service 2049;
              do
                echo '-- nfs node (nfs-service) is not available.  Sleeping ...';
                sleep 5;
              done"]
    {{- end }}

    - name: change-perm-jupyter
      image: busybox
      command: ["sh", "-c", "chown -R 1000:1000 /home/jupyter/jupyter_shared"]
      volumeMounts:
        - name: nfs-jupyter
          mountPath: "/home/jupyter/jupyter_shared"

    {{- if and .Values.users (not .Values.nfs.useLocal)  }}
    - name: users-home-dir
      image: busybox
      command: ["sh", "-c"]
      args:
      - |
        {{- range $index, $user := .Values.users }}
        chown -R {{ add 1100 $index }}:{{ add 1100 $index }} /home/{{ $user.username }}
        {{- end }}
      volumeMounts:
      {{- range .Values.users }}
      - name: nfs-users-{{ .username }}
        mountPath: /home/{{ .username }}
      {{- end }}
    {{- end }}

  hostname: {{ .Values.frontend.hostname }}

  containers:
  - name: frontend
    image: agalrui/debian-ipython-fn
    # command: ["ipcontroller", "--IPController.extra_config_file=/home/jupyter/config/ipcontroller_config.py"]
    # command: ["tail", "-f", "/dev/null"]
    env:
      - name: CONFIG_DIR
        value: /home/jupyter/config
      - name: IPCONTROLLER_JSON_DIR
        value: /home/jupyter/jupyter_shared

    volumeMounts:
    - name: ipcontroller-config-volume
      mountPath: /home/jupyter/config

    - name: config-users-volume
      mountPath: /etc/passwd
      subPath: passwd
    - name: config-users-volume
      mountPath: /etc/shadow
      subPath: shadow
    - name: config-users-volume
      mountPath: /etc/group
      subPath: group
    - name: config-users-volume
      mountPath: /etc/gshadow
      subPath: gshadow

    {{- range .Values.users }}
    - name: nfs-users-{{ .username }}
      mountPath: /home/{{ .username }}
    {{- end }}
  
    - name: nfs-jupyter
      mountPath: "/home/jupyter/jupyter_shared"
      readOnly: false

  volumes:
    {{- range .Values.users }}
    - name: nfs-users-{{ .username }}
      persistentVolumeClaim:
        claimName: pvc-users-{{ .username }}
    {{- end }}

    - name: nfs-jupyter
      persistentVolumeClaim:
        claimName: pvc-jupyter

    - name: config-users-volume
      configMap:
        defaultMode: 0777
        name: {{ .Release.Name }}-users-config

    - name: ipcontroller-config-volume
      configMap:
        defaultMode: 0777
        name: {{ .Release.Name }}-ipythonconf
        items:
          - key: ipcontroller_config.py
            path: ipcontroller_config.py
          - key: jupyterhub_config.py
            path: jupyterhub_config.py

---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-frontend-service
spec:
  clusterIP: None
  selector:
    type: frontend-node
  ports:
    {{- range .Values.frontend.IPController.enginePorts }}
    - name: {{ .name }}-engine
      protocol: TCP
      port: {{ .port }}
      targetPort: {{ .port }}
    {{ end }}

    - name: jupyter
      protocol: TCP
      port: {{ .Values.frontend.jupyterServerPort }}
      targetPort: 8000

    {{ range .Values.frontend.IPController.clientPorts }}
    - name: {{ .name }}-client
      protocol: TCP
      port: {{ .port }}
      targetPort: {{ .port }}
    {{ end }}

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-frontend-ingress
spec:
  rules:
  - http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: {{ .Release.Name }}-frontend-service  # Nombre del servicio que quieres exponer
            port:
              number: {{ .Values.frontend.jupyterServerPort }}  # Puerto del servicio Jupyter

---

apiVersion: v1
kind: Service
metadata:
  name: ssh-service
spec:
  type: NodePort
  selector:
    type: head-node
  ports:
    - port: 22
      targetPort: 22
      nodePort: 30022

